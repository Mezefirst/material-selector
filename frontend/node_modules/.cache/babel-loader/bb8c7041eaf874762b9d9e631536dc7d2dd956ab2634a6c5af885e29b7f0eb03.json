{"ast":null,"code":"var _jsxFileName = \"/workspaces/material-selector/frontend/src/components/RecommendMaterial.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RecommendMaterial({\n  input\n}) {\n  _s();\n  const [recommendations, setRecommendations] = useState([]);\n  const [error, setError] = useState(null);\n  const handleClick = async () => {\n    setError(null);\n    setRecommendations([]);\n    try {\n      // Map input to backend filter keys\n      const filters = {\n        max_cost: input.cost_per_kg,\n        min_strength: input.tensile_strength\n        // You can add other mappings as needed\n        // e.g., min_sustainability: input.sustainability\n      };\n      const res = await axios.post('http://localhost:8000/recommend', filters); // port 8000 for FastAPI\n      setRecommendations(res.data);\n    } catch (err) {\n      setError('Failed to get recommendations. Please check your backend and input.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Get Recommendation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this), recommendations.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: recommendations.map((mat, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: mat.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this), \" (Strength: \", mat.strength, \", Cost: \", mat.cost, \", Sustainability: \", mat.sustainability, \")\"]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(RecommendMaterial, \"QOkZu6v8vmWHOI6zrCBWaZbL1Ms=\");\n_c = RecommendMaterial;\nexport default RecommendMaterial;\nvar _c;\n$RefreshReg$(_c, \"RecommendMaterial\");","map":{"version":3,"names":["axios","useState","jsxDEV","_jsxDEV","RecommendMaterial","input","_s","recommendations","setRecommendations","error","setError","handleClick","filters","max_cost","cost_per_kg","min_strength","tensile_strength","res","post","data","err","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","map","mat","i","name","strength","cost","sustainability","_c","$RefreshReg$"],"sources":["/workspaces/material-selector/frontend/src/components/RecommendMaterial.jsx"],"sourcesContent":["import axios from 'axios';\nimport { useState } from 'react';\n\nfunction RecommendMaterial({ input }) {\n  const [recommendations, setRecommendations] = useState([]);\n  const [error, setError] = useState(null);\n\n  const handleClick = async () => {\n    setError(null);\n    setRecommendations([]);\n    try {\n      // Map input to backend filter keys\n      const filters = {\n        max_cost: input.cost_per_kg,\n        min_strength: input.tensile_strength,\n        // You can add other mappings as needed\n        // e.g., min_sustainability: input.sustainability\n      };\n      const res = await axios.post('http://localhost:8000/recommend', filters); // port 8000 for FastAPI\n      setRecommendations(res.data);\n    } catch (err) {\n      setError('Failed to get recommendations. Please check your backend and input.');\n    }\n  };\n\n  return (\n    <div>\n      <button onClick={handleClick}>Get Recommendation</button>\n      {error && <p style={{color: 'red'}}>{error}</p>}\n      {recommendations.length > 0 && (\n        <ul>\n          {recommendations.map((mat, i) => (\n            <li key={i}>\n              <b>{mat.name}</b> (Strength: {mat.strength}, Cost: {mat.cost}, Sustainability: {mat.sustainability})\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default RecommendMaterial;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,iBAAiBA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EACpC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9BD,QAAQ,CAAC,IAAI,CAAC;IACdF,kBAAkB,CAAC,EAAE,CAAC;IACtB,IAAI;MACF;MACA,MAAMI,OAAO,GAAG;QACdC,QAAQ,EAAER,KAAK,CAACS,WAAW;QAC3BC,YAAY,EAAEV,KAAK,CAACW;QACpB;QACA;MACF,CAAC;MACD,MAAMC,GAAG,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,iCAAiC,EAAEN,OAAO,CAAC,CAAC,CAAC;MAC1EJ,kBAAkB,CAACS,GAAG,CAACE,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZV,QAAQ,CAAC,qEAAqE,CAAC;IACjF;EACF,CAAC;EAED,oBACEP,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAQmB,OAAO,EAAEX,WAAY;MAAAU,QAAA,EAAC;IAAkB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACxDjB,KAAK,iBAAIN,OAAA;MAAGwB,KAAK,EAAE;QAACC,KAAK,EAAE;MAAK,CAAE;MAAAP,QAAA,EAAEZ;IAAK;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC9CnB,eAAe,CAACsB,MAAM,GAAG,CAAC,iBACzB1B,OAAA;MAAAkB,QAAA,EACGd,eAAe,CAACuB,GAAG,CAAC,CAACC,GAAG,EAAEC,CAAC,kBAC1B7B,OAAA;QAAAkB,QAAA,gBACElB,OAAA;UAAAkB,QAAA,EAAIU,GAAG,CAACE;QAAI;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,gBAAY,EAACK,GAAG,CAACG,QAAQ,EAAC,UAAQ,EAACH,GAAG,CAACI,IAAI,EAAC,oBAAkB,EAACJ,GAAG,CAACK,cAAc,EAAC,GACrG;MAAA,GAFSJ,CAAC;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEN,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACpB,EAAA,CArCQF,iBAAiB;AAAAiC,EAAA,GAAjBjC,iBAAiB;AAuC1B,eAAeA,iBAAiB;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}